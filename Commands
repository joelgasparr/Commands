Commands
pwd : Ver en donde estoy
cd : Abrir 
cd .. : Regresar
ls : Ver que hay en el archivo
git status : Ver el estado 
git diff : Ver las modificaciones 
git difftool : Ver graficamente las modificaciones 
CTRL + C : Regresar a la normalidad 
mate : Editar el archivo 
git commit : Confirmar cambios
git pull : Actualizar 
git push : Subir 
git branch : Enlista las Ramas y la que tenga asterisco es en donde estoy
git checkout -b : nueva rama
git branch -d : borrar Rama local
git remote add origin : subir proyecto a un repositorio nuevo
git init : iniciar con git el proyecto 
git add : agregar un archivo al stage
git add . : agregar todos los archivos al stage
vi : Abrir archivo en terminal 
echo : escribir en un archivo 
touch : crea archivo 
mkdir : crea directorio 
git merge : fusionar ramas locales
git mergetool : ver gráficamente el conflicto en la fusion de las ramas
git fetch : actualiza las referencias entre el repositorio remoto y el repositorio local
git rebase : fusionar ramas locales pero borra el historial de nuestros commits realizados
git stash : guardar un cambio y seguir trabajando en otra cosa
git stash (acción) stash@{N} : hacer la acción de un stash en especifico 
git stash apply : aplicar un cambio en especifico 
git stash list : ver los cambios realizados 
git stash drop : eliminar el ultimo stash guardado
git stash show : ver un cambio en especifico 
git stash clear : borrar todos los stash
git stash -u : guardar todos los archivos incluyendo los nuevos
git stash branch : guardar los cambios en otra rama 
git tag : crear etiqueta 
git tag --list : ver lista de etiquetas 
git tag --delete : borrar etiqueta 
git tag -a : etiqueta con mensaje 
git tag -f : forzar una etiqueta a otro commit 
git push origin --tags : subir todas las etiquetas 
git push origin :(nombre de etiqueta) : borrar etiqueta en GitHub
git cherry-pick : hacer los commits de una rama en otra rama distinta 
git cherry-pick --no-commit : agregar los cambios al stage de otra rama pero sin commit 
